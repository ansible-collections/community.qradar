name: CI
on:
- pull_request

jobs:
  sanity:
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v1
        with:
          # FIXME ansible_collections/NAMESPACE/COLLECTION
          path: ansible_collections/community/grafana

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install ansible-base (devel)
        run: pip install https://github.com/ansible/ansible/archive/devel.tar.gz --disable-pip-version-check

      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color --python 3.8

  units:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
        with:
          # FIXME ansible_collections/NAMESPACE/COLLECTION        
          path: ansible_collections/community/grafana

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install ansible-base (devel)
        run: pip install https://github.com/ansible/ansible/archive/devel.tar.gz --disable-pip-version-check

      - name: Run unit tests
        run: ansible-test units --docker -v --color --python 3.8 --coverage

      - name: Generate coverage report.
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version

      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false

  integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.8"]
    container:
      image: python:${{ matrix.python_version }}-alpine
    steps:

      - name: Check out code
        uses: actions/checkout@v1
        with:
          # FIXME ansible_collections/NAMESPACE/COLLECTION        
          path: ansible_collections/community/grafana

      - name: Install ansible-base (devel)
        run: pip install https://github.com/ansible/ansible/archive/devel.tar.gz --disable-pip-version-check

      - name: Run integration tests on Python ${{ matrix.python_version }}
        run: ansible-test integration --docker -v --color --retry-on-error --python ${{ matrix.python_version }} --continue-on-error --diff --coverage
        
      - name: Generate coverage report.
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: ./ansible_collections/community/kubernetes

      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false
